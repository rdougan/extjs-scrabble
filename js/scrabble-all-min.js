Ext.ns("ScrabbleApp");Ext.onReady(function(){Scrabble=new Ext.ux.Scrabble.Game();Scrabble.launch()});Ext.ns("Ext.ux.Scrabble");Ext.ux.Scrabble.Game=function(){this.scrabbleBoard=new Ext.ux.Scrabble.Board();this.scrabbleRack=new Ext.ux.Scrabble.Rack();this.win=new Ext.Window({width:599,title:"Ext Scrabble",id:"scrabble_game",cls:"x-scrabble-game",closable:false,constrain:true,resizable:false,buttonAlign:"center",items:[this.getScrabbleBoard()],bbar:[this.getScrabbleRack()],tbar:[{text:"New Game",handler:function(){Ext.Msg.show({title:"Are you sure?",msg:"Are you sure you want to start a new game?",buttons:Ext.Msg.YESNO,icon:Ext.MessageBox.QUESTION,fn:function(a){if(a=="yes"){this.getScrabbleBoard().fireEvent("newgame",this)}},scope:this})},scope:this},"-",{text:"Help",handler:this.showHelp,scope:this},"->"],buttons:[{text:"Submit Word",handler:function(){this.getScrabbleBoard().fireEvent("submitword")},scope:this},{text:"Undo",handler:function(){this.getScrabbleBoard().fireEvent("undo")},scope:this}]})};Ext.ux.Scrabble.Game.prototype={helpWindow:null,started:false,launch:function(){this.win.show()},getScrabbleBoard:function(){return this.scrabbleBoard},getScrabbleRack:function(){return this.scrabbleRack},showHelp:function(){if(!this.helpWindow){this.helpWindow=new Ext.Window({constrain:true,title:"Help",width:400,height:300,layout:"fit",items:[{border:false,cls:"x-scrabble-help",html:new Ext.Template("<h1>Instructions</h1>","<ul>","<li>- Drag tiles onto the board</li>","<li>- Double click tiles to undo single tile move</li>","</ul>","<h1>Scoring</h1>","<p>Blah blah</p>")}],closeAction:"hide"})}this.helpWindow.show()},};Ext.ux.Scrabble.Board=function(a){var a=a||{};Ext.applyIf(a,{id:"scrabble_board",cls:"x-scrabble-board",border:false});Ext.ux.Scrabble.Board.superclass.constructor.call(this,a);this.addEvents("newgame","submitword","undo","checkaxis");this.on("newgame",this.resetBoard,this,true);this.on("submitword",this.submitWord,this);this.on("undo",this.resetBoard,this);this.on("checkaxis",this.checkAxis,this)};Ext.extend(Ext.ux.Scrabble.Board,Ext.Panel,{boardXPlaces:15,boardYPlaces:15,placedTiles:[],rowOnX:false,rowOnY:false,generateBoard:function(){for(var d=1;d<this.boardYPlaces+1;d++){for(var c=1;c<this.boardXPlaces+1;c++){this.add(new Ext.ux.Scrabble.Place({placeY:d,placeX:c}))}}},resetBoard:function(a){if(this.items){this.items.each(function(c){if(c.droppedOn){var b=c.items.items[0].returnTile()}this.remove(c)},this)}this.generateBoard();this.doLayout();if(a){Scrabble.getScrabbleRack().dealTiles()}},submitWord:function(){var a=this.getPlacedTiles();if(a.length<2){return Ext.Msg.show({title:"Ext Scrabble",msg:"You have placed only 1 or no tiles on the board.",buttons:Ext.Msg.OK})}if(!this.fireEvent("checkaxis",this)){return Ext.Msg.show({title:"Ext Scrabble",msg:"You have not placed any tiles in a row. Your word must run horizontally or vertically across the scrabble board.",buttons:Ext.Msg.OK})}var c=[];Ext.each(a,function(e){if(this.rowOnX){var d=e.droppedOnPlace.placeX}if(this.rowOnY){var d=e.droppedOnPlace.placeY}c[d]=e.letter},this);var b=c.join("");return Ext.Msg.show({title:"Ext Scrabble",msg:"<strong>"+b+"</strong> is a valid word!",buttons:Ext.Msg.OK})},checkAxis:function(){var c=this.getPlacedTiles();var b=null;var a=null;var e=true;var d=true;Ext.each(c,function(f){var g=f.droppedOnPlace.placeY;if(!b){b=g;return}if(b!=g){e=false;return false}this.rowOnX=true;e=true},this);Ext.each(c,function(f){var g=f.droppedOnPlace.placeX;if(!a){a=g;return}if(a!=g){d=false;return false}this.rowOnY=true;d=true},this);if(e||d){return true}else{return false}},validateWord:function(a){if(Dictionary.indexOf(a)==-1){return false}else{return true}},getPlacedTiles:function(){return this.placedTiles},getStatusBar:function(){return Ext.getCmp("scrabble-statusbar")},onRender:function(b,a){Ext.ux.Scrabble.Board.superclass.onRender.apply(this,arguments);this.generateBoard()}});Ext.ux.Scrabble.Place=function(a){var a=a||{};if(!a.placeX||!a.placeY){return}Ext.applyIf(a,{cls:"x-scrabble-place",type:"normal"});this.id="place-"+a.placeX+"-"+a.placeY;Ext.ux.Scrabble.Place.superclass.constructor.call(this,a);this.on("add",this.doLayout,this)};Ext.extend(Ext.ux.Scrabble.Place,Ext.Container,{placeX:null,placeY:null,type:null,droppedOn:false,tripleWordScorePositions:[{x:1,y:1},{x:8,y:1},{x:15,y:1},{x:1,y:8},{x:15,y:8},{x:1,y:15},{x:8,y:15},{x:15,y:15}],tripleWordScoreCls:"triple-word",doubleWordScorePositions:[{x:2,y:2},{x:2,y:14},{x:3,y:3},{x:3,y:13},{x:4,y:4},{x:4,y:12},{x:5,y:5},{x:5,y:11},{x:11,y:5},{x:11,y:11},{x:12,y:4},{x:12,y:12},{x:13,y:3},{x:13,y:13},{x:14,y:2},{x:14,y:14}],doubleWordScoreCls:"double-word",tripleLetterScorePositions:[{x:6,y:2},{x:10,y:2},{x:2,y:6},{x:6,y:6},{x:10,y:6},{x:14,y:6},{x:2,y:10},{x:6,y:10},{x:10,y:10},{x:14,y:10},{x:6,y:14},{x:10,y:14}],tripleLetterScoreCls:"triple-letter",doubleLetterScorePositions:[{x:4,y:1},{x:12,y:1},{x:7,y:3},{x:9,y:3},{x:1,y:4},{x:8,y:4},{x:15,y:4},{x:3,y:7},{x:7,y:7},{x:9,y:7},{x:13,y:7},{x:4,y:8},{x:12,y:8},{x:3,y:9},{x:7,y:9},{x:9,y:9},{x:13,y:9},{x:1,y:12},{x:8,y:12},{x:15,y:12},{x:7,y:13},{x:9,y:13},{x:4,y:15},{x:12,y:15}],doubleLetterScoreCls:"double-letter",centerPosition:[{x:8,y:8}],centerCls:"center",placeChecker:function(){Ext.each(this.tripleWordScorePositions,function(a){if(this.placeX==a.x){if(this.placeY==a.y){this.el.addClass(this.tripleWordScoreCls);this.type=this.tripleWordScoreCls;return}}},this);Ext.each(this.doubleWordScorePositions,function(a){if(this.placeX==a.x){if(this.placeY==a.y){this.el.addClass(this.doubleWordScoreCls);this.type=this.doubleWordScoreCls;return}}},this);Ext.each(this.tripleLetterScorePositions,function(a){if(this.placeX==a.x){if(this.placeY==a.y){this.el.addClass(this.tripleLetterScoreCls);this.type=this.tripleLetterScoreCls;return}}},this);Ext.each(this.doubleLetterScorePositions,function(a){if(this.placeX==a.x){if(this.placeY==a.y){this.el.addClass(this.doubleLetterScoreCls);this.type=this.doubleLetterScoreCls;return}}},this);Ext.each(this.centerPosition,function(a){if(this.placeX==a.x){if(this.placeY==a.y){this.el.addClass(this.centerCls);this.type=this.centerCls;return}}},this)},initalizeDrop:function(){var a=this;this.dropZone=new Ext.dd.DropTarget(this.el,{ddGroup:"tiles",notifyOver:function(c,d,b){if(a.dropAllowed(b.tile)){return Ext.dd.DropTarget.prototype.dropAllowed}else{return Ext.dd.DropTarget.prototype.dropNotAllowed}},notifyDrop:function(c,d,b){if(a.dropAllowed(b.tile)){return a.droppedTile(a,b.tile)}else{return false}}})},dropAllowed:function(a){if(this.droppedOn){return false}return true},changeDroppedOnStatus:function(a){if(a){if(this.droppedOn!==a){this.droppedOn=a}return}this.droppedOn=(this.droppedOn)?this.droppedOn=false:this.droppedOn=true},droppedTile:function(a,c){var b=a;var d=c.droppedOnPlace;if(c.droppedOnPlace){Scrabble.getScrabbleBoard().getPlacedTiles().remove(c);d.changeDroppedOnStatus(false)}b.changeDroppedOnStatus(true);b.add(c);c.changeBoardStatus(true);c.droppedOnPlace=b;Scrabble.getScrabbleBoard().getPlacedTiles().push(c);return true},onRender:function(b,a){var b=b||Ext.getBody();Ext.ux.Scrabble.Place.superclass.onRender.apply(this,arguments);this.el=b.createChild({id:this.id,cls:this.cls});this.placeChecker();this.initalizeDrop()}});Ext.ux.Scrabble.Rack=function(a){var a=a||{};Ext.applyIf(a,{id:"scrabble_rack",cls:"x-scrabble-rack",border:false});Ext.ux.Scrabble.Rack.superclass.constructor.call(this,a);this.on("add",this.doLayout,this)};Ext.extend(Ext.ux.Scrabble.Rack,Ext.Panel,{tiles:[{letter:"a",value:1},{letter:"a",value:1},{letter:"a",value:1},{letter:"a",value:1},{letter:"a",value:1},{letter:"a",value:1},{letter:"a",value:1},{letter:"a",value:1},{letter:"a",value:1},{letter:"b",value:3},{letter:"b",value:3},{letter:"c",value:3},{letter:"c",value:3},{letter:"d",value:2},{letter:"d",value:2},{letter:"d",value:2},{letter:"d",value:2},{letter:"e",value:1},{letter:"e",value:1},{letter:"e",value:1},{letter:"e",value:1},{letter:"e",value:1},{letter:"e",value:1},{letter:"e",value:1},{letter:"e",value:1},{letter:"e",value:1},{letter:"e",value:1},{letter:"e",value:1},{letter:"e",value:1},{letter:"f",value:4},{letter:"f",value:4},{letter:"g",value:2},{letter:"g",value:2},{letter:"g",value:2},{letter:"h",value:4},{letter:"h",value:4},{letter:"i",value:1},{letter:"i",value:1},{letter:"i",value:1},{letter:"i",value:1},{letter:"i",value:1},{letter:"i",value:1},{letter:"i",value:1},{letter:"i",value:1},{letter:"i",value:1},{letter:"j",value:8},{letter:"k",value:5},{letter:"l",value:1},{letter:"l",value:1},{letter:"l",value:1},{letter:"l",value:1},{letter:"m",value:3},{letter:"m",value:3},{letter:"n",value:1},{letter:"n",value:1},{letter:"n",value:1},{letter:"n",value:1},{letter:"n",value:1},{letter:"n",value:1},{letter:"o",value:1},{letter:"o",value:1},{letter:"o",value:1},{letter:"o",value:1},{letter:"o",value:1},{letter:"o",value:1},{letter:"o",value:1},{letter:"o",value:1},{letter:"p",value:3},{letter:"p",value:3},{letter:"q",value:10},{letter:"r",value:1},{letter:"r",value:1},{letter:"r",value:1},{letter:"r",value:1},{letter:"r",value:1},{letter:"r",value:1},{letter:"s",value:1},{letter:"s",value:1},{letter:"s",value:1},{letter:"s",value:1},{letter:"t",value:1},{letter:"t",value:1},{letter:"t",value:1},{letter:"t",value:1},{letter:"t",value:1},{letter:"t",value:1},{letter:"u",value:1},{letter:"u",value:1},{letter:"u",value:1},{letter:"u",value:1},{letter:"v",value:4},{letter:"v",value:4},{letter:"w",value:4},{letter:"w",value:4},{letter:"x",value:8},{letter:"y",value:4},{letter:"y",value:4},{letter:"z",value:10},{letter:"&nbsp;",value:0},{letter:"&nbsp;",value:0}],usedTiles:[],dealTiles:function(){if(this.items){this.items.each(function(d){this.remove(d)},this)}for(var a=0;a<7;a++){var c=Math.floor(Math.random()*99);var b=this.tiles[c];if(this.usedTiles.indexOf(b)!=-1){a=a-1}else{this.usedTiles[c]=b;this.addTile(b)}}},addTile:function(a){var b=new Ext.ux.Scrabble.Tile(a);this.add(b)},onRender:function(b,a){Ext.ux.Scrabble.Rack.superclass.onRender.apply(this,arguments);this.dealTiles()}});Ext.ux.Scrabble.Tile=function(a){var a=a||{};Ext.applyIf(a,{cls:"x-scrabble-tile"});Ext.ux.Scrabble.Tile.superclass.constructor.call(this,a)};Ext.extend(Ext.ux.Scrabble.Tile,Ext.Component,{letter:null,value:null,onBoard:false,droppedOnPlace:null,initalizeDrag:function(){var a=this;this.dragSource=new Ext.dd.DragSource(this.el,{ddGroup:"tiles",getDragData:function(){return{tile:a}},autoOffset:function(b,f){var c=a.getEl().getXY();var e=b-c[0]+22;var d=f-c[1];this.setDelta(e,d)}})},changeBoardStatus:function(a){if(a){if(this.onBoard!==a){this.onBoard=a}return}this.onBoard=(this.onBoard)?this.onBoard=false:this.onBoard=true},returnTile:function(){if(!this.onBoard){return}this.droppedOnPlace.remove(this);Scrabble.getScrabbleBoard().getPlacedTiles().remove(this);this.droppedOnPlace.changeDroppedOnStatus(false);this.droppedOnPlace=null;this.changeBoardStatus(false);Scrabble.getScrabbleRack().addTile({letter:this.letter,value:this.value});Scrabble.getScrabbleRack().doLayout()},onRender:function(b,a){var b=b||Ext.getBody();Ext.ux.Scrabble.Tile.superclass.onRender.apply(this,arguments);this.el=b.createChild({cls:this.cls,html:'<span class="letter">'+this.letter+'</span><span class="value">'+this.value+"</span>"});this.el.unselectable();this.el.on("dblclick",this.returnTile,this);this.initalizeDrag()}});Ext.ux.Scrabble.Word=function(a){var a=a||{};Ext.applyIf(a,{});Ext.ux.Scrabble.Word.superclass.constructor.call(this,a)};Ext.extend(Ext.ux.Scrabble.Word,Ext.Component,{});